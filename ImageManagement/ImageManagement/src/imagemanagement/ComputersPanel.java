/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imagemanagement;

import java.awt.Color;
import javax.swing.DefaultListModel;

/**
 *
 * @author metudoreanu
 */
public class ComputersPanel extends javax.swing.JPanel {

    /**
     * Creates new form ComputersPanel
     */
    public ComputersPanel() {
        initComponents();
        
        updateImageList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        imageList = new javax.swing.JList();
        deleteImageButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        imageNameText = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        totalSizeLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        appsList = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        addApplicationButton = new javax.swing.JButton();
        removeApplicationButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        additionalText = new javax.swing.JTextField();
        addImageButton = new javax.swing.JButton();
        updateExtraDataButton = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Computer Images"));

        imageList.setModel(new DefaultListModel());
        imageList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        imageList.setToolTipText("List of Images");
        imageList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                imageListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(imageList);

        deleteImageButton.setText("Delete Image");
        deleteImageButton.setToolTipText("1. Select Image to the Left 2. Click Here to Delete");
        deleteImageButton.setEnabled(false);
        deleteImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteImageButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Name");

        imageNameText.setToolTipText("Enter Image Name Here");

        updateButton.setText("Update Image Name");
        updateButton.setToolTipText("1. Select Image 2. Enter new name above 3. Click to Apply Change");
        updateButton.setEnabled(false);
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        totalSizeLabel.setText("Total Image Size:");
        totalSizeLabel.setToolTipText("");

        appsList.setModel(new DefaultListModel());
        appsList.setToolTipText("The list of applications that are in the selected image");
        appsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                appsListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(appsList);

        jLabel2.setText("Applications in this image");

        addApplicationButton.setText("Add Application");
        addApplicationButton.setToolTipText("1. Select Application in Application Tab 2. Select Image to add too 3. Click Here");
        addApplicationButton.setEnabled(false);
        addApplicationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addApplicationButtonActionPerformed(evt);
            }
        });

        removeApplicationButton.setText("Remove Application");
        removeApplicationButton.setToolTipText("1. Select Image to the left 2. Select Application Above 3. Click Here");
        removeApplicationButton.setEnabled(false);
        removeApplicationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeApplicationButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Additional Data");

        additionalText.setText("0");
        additionalText.setToolTipText("Additional Data Requirments for Images and their Applications");
        additionalText.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                additionalTextCaretUpdate(evt);
            }
        });

        addImageButton.setText("Add New Image");
        addImageButton.setToolTipText("1. Make sure no image is selected 2. Type image name above 3. Click here");
        addImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addImageButtonActionPerformed(evt);
            }
        });

        updateExtraDataButton.setText("Update Additional Data");
        updateExtraDataButton.setToolTipText("1. Select Image to the Left 2. Select Application Above 3. Enter Additional Data in box above 4. Click Here");
        updateExtraDataButton.setEnabled(false);
        updateExtraDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateExtraDataButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalSizeLabel)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(deleteImageButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(updateButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addImageButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(imageNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(additionalText))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE))
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(removeApplicationButton, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                                .addComponent(updateExtraDataButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(addApplicationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(imageNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(totalSizeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(updateButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addImageButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deleteImageButton))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(additionalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(addApplicationButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeApplicationButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateExtraDataButton))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void appsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_appsListValueChanged
        Application app = (Application) appsList.getSelectedValue(); //get the selected application if any
        if(app == null){
            this.removeApplicationButton.setEnabled(false);
        }
        else{
            this.removeApplicationButton.setEnabled(true);
        }
            
    }//GEN-LAST:event_appsListValueChanged

    private void removeApplicationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeApplicationButtonActionPerformed
        Image image = (Image) imageList.getSelectedValue(); //get the selected image
        Application app = (Application) appsList.getSelectedValue(); //get the selected application
        
        //remove the image from the application
        image.removeApplication(app);
        
        //update image data - because I just removed an application
        updateImageData();
        updateAddApplication(ImageManagement.appPanel.getSelectedApplication()); //remember to update the add application button
        //refresh the list of applications
        ImageManagement.appPanel.updateApplicationList();
    }//GEN-LAST:event_removeApplicationButtonActionPerformed

    private void additionalTextCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_additionalTextCaretUpdate
        updateAddApplication(ImageManagement.appPanel.getSelectedApplication()); //remember to update the add application button
        
//get the text from the the textfield - a string
        String text = additionalText.getText();
        double size; //this will be the size if I can convert it to a number
        //try to convert it to a number
        try{
            size = Double.parseDouble(text);
        }
        catch(Exception e){
            updateExtraDataButton.setEnabled(false); //it is not a number, disable the button
            return; //give back control to the GUI thread
        }
        
        //if I get here.. size is an actual number
        updateExtraDataButton.setEnabled(true);
    }//GEN-LAST:event_additionalTextCaretUpdate

    private void addApplicationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addApplicationButtonActionPerformed
        Image image = (Image) imageList.getSelectedValue(); //get the selected image
        Application app = ImageManagement.appPanel.getSelectedApplication(); //get the selected application from the other panel
        String text = this.additionalText.getText(); //get the user input from the text field
        double extraData = Double.parseDouble(text); //this must be succseeful, otherwise the button would be disabled
        
        image.addApplication(app, extraData); //add the application to the image
        //update image data - because I just removed an application
        updateImageData();
        
        //refresh the list of applications
        ImageManagement.appPanel.updateApplicationList();//this will deselect any application - should be done before appPanel.getSelectedApplication()) 
        
        updateAddApplication(ImageManagement.appPanel.getSelectedApplication()); //remember to update the add application button
    }//GEN-LAST:event_addApplicationButtonActionPerformed

    
    
    
    
    
    
    
    
    //MY WORRKKKKKKKKKKKKKKKKKKK
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        Image img = (Image) imageList.getSelectedValue();
        
        String name;
        name = imageNameText.getText();
        img.setName(name);
        
        //need to force a repaint
        imageList.repaint(); //this may not be needed every time
        //update the computer image panel
        ImageManagement.imagePanel.updateImageData();  
        imageList.clearSelection();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void addImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addImageButtonActionPerformed
        String name = imageNameText.getText();
        Image addImage = new Image();
        addImage.setName(name);
        ImageManagement.allImages.add(addImage);
        
        updateImageList();
        
    }//GEN-LAST:event_addImageButtonActionPerformed

    
    
    
    
    private void imageListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_imageListValueChanged
        updateImageData();
        updateAddApplication(ImageManagement.appPanel.getSelectedApplication());//remember to update the add application button
    }//GEN-LAST:event_imageListValueChanged

    private void deleteImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteImageButtonActionPerformed
        Image image = (Image) imageList.getSelectedValue(); //get selected image
        //remove it from the repository
        ImageManagement.allImages.remove(image);
        
        //refresh image list
        updateImageList();      
        
        //refresh the list of applications
        ImageManagement.appPanel.updateApplicationList();
    }//GEN-LAST:event_deleteImageButtonActionPerformed

    private void updateExtraDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateExtraDataButtonActionPerformed
        Image img = (Image) imageList.getSelectedValue();
        Application app = (Application) appsList.getSelectedValue();
        
        String name;
        name = additionalText.getText();
        
        int size;
        size = Integer.parseInt(name);
        
        img.setApplicationData(app, size);

        updateImageList();
        ImageManagement.imagePanel.updateImageData();
        ImageManagement.appPanel.updateApplicationList();

    }//GEN-LAST:event_updateExtraDataButtonActionPerformed

    
    //this function updates the list of computer images
    public void updateImageList(){
        //need to initialize my list
        DefaultListModel model = (DefaultListModel) imageList.getModel();
        model.clear();
        for(int i = 0; i < ImageManagement.allImages.size(); i++){
            Image image = ImageManagement.allImages.get(i); //get the image from the database repository
            model.addElement(image); //add the image to my list
        }
    }
    
    //this function will be called from the ApplicationPanel class
    //the app parameter is the application selected in that panel
    public void updateAddApplication(Application app){
        Image image = (Image) imageList.getSelectedValue(); //get the selected image - need to make sure one image if selected to add this application to
        
        //first figure out the name of the button
        String tmp = "Add Application"; //this is the default name if no application is selected in the ApplicationPanel 
        if(app != null){
            if(image !=null && image.hasApplication(app)) //see if the application is already in that image
                tmp = app.getName() + " already in";
            else
                tmp = "Add " + app.getName();
        }
        addApplicationButton.setText(tmp); //done setting the name of the button
        
        //try and convert the extraData to a number
        boolean canConvert = false;
        try{
            String text = this.additionalText.getText();
            Double.parseDouble(text);
            
            //if the code gets to this line, the conversion was successful
            canConvert = true;
            additionalText.setBackground(Color.white);
        }
        catch(Exception e){
            //nothing to do here ... but I was not able to convert to double
            additionalText.setBackground(Color.pink);
        }
        
        //next figure out if the button should be enabled of not
        if(app == null || image ==null || image.hasApplication(app) || !canConvert){
            this.addApplicationButton.setEnabled(false);
        }
        else{
            this.addApplicationButton.setEnabled(true);
        }
    }
    
    //this function allows the ApplicationPanel to trigger an update in this panel
    //...kind of inter-panel communication
    public void updateImageData(){
        Image image = (Image) imageList.getSelectedValue(); //get the selected image
        if(image == null){ //if nothing is selected
            updateButton.setEnabled(false); //disable the button
            this.deleteImageButton.setEnabled(false);
            totalSizeLabel.setText("Total Image Size: "); //reset the size
            this.imageNameText.setText(""); //empty the name
            
            //clear the list of applications
            DefaultListModel model = (DefaultListModel) appsList.getModel();
            model.clear();
        }
        else{
            updateButton.setEnabled(true);
            this.deleteImageButton.setEnabled(true);
            totalSizeLabel.setText("Total Image Size: " + image.computeTotalDiskSize());
            imageNameText.setText(image.getName());
            
            //add the applications in this image to the list
            DefaultListModel model = (DefaultListModel) appsList.getModel(); //get the model
            model.clear(); //first remove everything that used to be in the list
            for(int i = 0; i < image.getNumberOfApplications(); i++){//add one application at a time to the model
                Application app = image.getApplication(i);
                model.addElement(app);
            }
        }
        
        imageList.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addApplicationButton;
    private javax.swing.JButton addImageButton;
    private javax.swing.JTextField additionalText;
    private javax.swing.JList appsList;
    private javax.swing.JButton deleteImageButton;
    private javax.swing.JList imageList;
    private javax.swing.JTextField imageNameText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton removeApplicationButton;
    private javax.swing.JLabel totalSizeLabel;
    private javax.swing.JButton updateButton;
    private javax.swing.JButton updateExtraDataButton;
    // End of variables declaration//GEN-END:variables
}
